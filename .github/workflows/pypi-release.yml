on:
  # ❷ Manual path: run in UI to promote a tested version
  workflow_dispatch:
    inputs:
      version:
        description: "Exact version to release (e.g. 1.2.3)"
        required: true
        type: string

jobs:
  release-build:
    # Protect against accidental trigger of the workflow
    if: ${{ github.actor == 'shmuelamar' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Validate that tag v<version> exists in the repo and check it out --------------
      - name: Verify tag exists
        env:
          VERSION: ${{ github.event.inputs.version }}
        run: |
          git fetch --tags       # just in case
          if ! git rev-parse "refs/tags/v$VERSION" >/dev/null 2>&1; then
              echo "::error file=workflow_dispatch,title=Invalid tag::Tag v$VERSION not found."
              exit 1
          fi
          # checkout that tag so build uses its exact code
          git checkout "v$VERSION"
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Build wheel + sdist
        run: |
          python -m pip install -U build
          python -m build

      - name: Install and test the wheel
        run: |
          ./devops/package-install-and-test.sh

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  push-to-pypi:
    # only appear when you click “Run workflow” in the UI
    needs:
      - release-build
    runs-on: ubuntu-latest
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    # Dedicated environments with protections for publishing are strongly recommended.
    environment:
      name: pypi
      # OPTIONAL: uncomment and update to include your PyPI project URL in the deployment status:
      url: https://pypi.org/p/igcs

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc
        with:
          # Sigstore signing
          attestations: true

      - name: Install and test the package from PyPI
        env:
          VERSION: ${{ github.event.inputs.version }}
        run: |
          python -m pip install --upgrade pip
          python -m pip install "igcs==$VERSION"
          python - <<'PY'
          from igcs import grounding
          from igcs.entities import Doc
          sels = grounding.ground_selections(
              ["the cat on the mat"],
              docs=[Doc(id=0, text="the cat sat on the mat")],
              max_dist_rel=0.5,
          )
          assert len(sels) == 1 and sels[0].doc_id == 0
          print("✅  PyPI install smoke‑test passed.")
          PY
